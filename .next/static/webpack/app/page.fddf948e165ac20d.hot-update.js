"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/services/translation.tsx":
/*!**************************************!*\
  !*** ./app/services/translation.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LANGUAGE_KEY: function() { return /* binding */ LANGUAGE_KEY; },\n/* harmony export */   getTranslation: function() { return /* binding */ getTranslation; }\n/* harmony export */ });\n/* harmony import */ var _provider_locales_en_common_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../provider/locales/en/common.json */ \"(app-pages-browser)/./app/provider/locales/en/common.json\");\n/* harmony import */ var _provider_locales_fr_common_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../provider/locales/fr/common.json */ \"(app-pages-browser)/./app/provider/locales/fr/common.json\");\n\n\nconst LANGUAGE_KEY = \"preferred_language\";\nconst getTranslation = ()=>{\n    const storedLanguage = sessionStorage.getItem(LANGUAGE_KEY);\n    if (storedLanguage) {\n        return storedLanguage === \"fr\" ? _provider_locales_fr_common_json__WEBPACK_IMPORTED_MODULE_1__ : _provider_locales_en_common_json__WEBPACK_IMPORTED_MODULE_0__;\n    } else if (true) {\n        const browserLanguage = navigator.language.includes(\"fr\") ? \"fr\" : \"en\";\n        sessionStorage.setItem(LANGUAGE_KEY, browserLanguage);\n        return browserLanguage === \"fr\" ? _provider_locales_fr_common_json__WEBPACK_IMPORTED_MODULE_1__ : _provider_locales_en_common_json__WEBPACK_IMPORTED_MODULE_0__;\n    }\n    return _provider_locales_en_common_json__WEBPACK_IMPORTED_MODULE_0__;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9zZXJ2aWNlcy90cmFuc2xhdGlvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNBO0FBRTdDLE1BQU1FLGVBQWUscUJBQXFCO0FBRTFDLE1BQU1DLGlCQUFpQjtJQUM1QixNQUFNQyxpQkFBaUJDLGVBQWVDLE9BQU8sQ0FBQ0o7SUFDOUMsSUFBSUUsZ0JBQWdCO1FBQ2xCLE9BQU9BLG1CQUFtQixPQUFPSCw2REFBRUEsR0FBR0QsNkRBQUVBO0lBQzFDLE9BQU8sSUFBSSxJQUE2QixFQUFFO1FBQ3hDLE1BQU1PLGtCQUFrQkMsVUFBVUMsUUFBUSxDQUFDQyxRQUFRLENBQUMsUUFBUSxPQUFPO1FBQ25FTCxlQUFlTSxPQUFPLENBQUNULGNBQWNLO1FBQ3JDLE9BQU9BLG9CQUFvQixPQUFPTiw2REFBRUEsR0FBR0QsNkRBQUVBO0lBQzNDO0lBQ0EsT0FBT0EsNkRBQUVBO0FBQ1gsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvc2VydmljZXMvdHJhbnNsYXRpb24udHN4PzY3YzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVuIGZyb20gXCIuLi9wcm92aWRlci9sb2NhbGVzL2VuL2NvbW1vbi5qc29uXCI7XHJcbmltcG9ydCBmciBmcm9tIFwiLi4vcHJvdmlkZXIvbG9jYWxlcy9mci9jb21tb24uanNvblwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IExBTkdVQUdFX0tFWSA9IFwicHJlZmVycmVkX2xhbmd1YWdlXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VHJhbnNsYXRpb24gPSAoKSA9PiB7XHJcbiAgY29uc3Qgc3RvcmVkTGFuZ3VhZ2UgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKExBTkdVQUdFX0tFWSk7XHJcbiAgaWYgKHN0b3JlZExhbmd1YWdlKSB7XHJcbiAgICByZXR1cm4gc3RvcmVkTGFuZ3VhZ2UgPT09IFwiZnJcIiA/IGZyIDogZW47XHJcbiAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICBjb25zdCBicm93c2VyTGFuZ3VhZ2UgPSBuYXZpZ2F0b3IubGFuZ3VhZ2UuaW5jbHVkZXMoXCJmclwiKSA/IFwiZnJcIiA6IFwiZW5cIjtcclxuICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oTEFOR1VBR0VfS0VZLCBicm93c2VyTGFuZ3VhZ2UpO1xyXG4gICAgcmV0dXJuIGJyb3dzZXJMYW5ndWFnZSA9PT0gXCJmclwiID8gZnIgOiBlbjtcclxuICB9XHJcbiAgcmV0dXJuIGVuO1xyXG59O1xyXG4iXSwibmFtZXMiOlsiZW4iLCJmciIsIkxBTkdVQUdFX0tFWSIsImdldFRyYW5zbGF0aW9uIiwic3RvcmVkTGFuZ3VhZ2UiLCJzZXNzaW9uU3RvcmFnZSIsImdldEl0ZW0iLCJicm93c2VyTGFuZ3VhZ2UiLCJuYXZpZ2F0b3IiLCJsYW5ndWFnZSIsImluY2x1ZGVzIiwic2V0SXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/services/translation.tsx\n"));

/***/ })

});